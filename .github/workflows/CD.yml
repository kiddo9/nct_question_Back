name: NCT-CBT DOCKER DEPLOYMENT

on:
  workflow_run:
    workflows: [NCT_QUESTION_BANK_CI]
    types:
      - completed

# vars and secrets to be specified in the settings panel of github repo

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # The type of runner that the job will run on
    strategy:
      matrix:
        os: [ubuntu-latest]

    # This is a matrix of all the possible OS and Node.js versions that will be tested
    runs-on: ${{matrix.os}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      #  Extract docker image metadata from the metadata actions
      - name: Extract Docker Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # get details from github secrets and varibles
          images: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}

        # log in to docker  hub with your creds
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

        # set up docker builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # build and push image to docker hub
      - name: Build and Push Docker image to Doker Hub
        uses: docker/build-push-action@v6
        with:
          push: ${{github.event_name != 'pull_request'}} #nice block
          tags: ${{steps.meta.outputs.tags}}
          annotations: ${{steps.meta.outputs.annotations}}
          provenance: true
          sbom: true

        # Azure
      # - name: Log in to Azure
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    #   - name: Build and deploy Container App
    #     id: build-deploy
    #     uses: azure/container-apps-deploy-action@v1
    #     with:
    #       imageToDeploy: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.sha }}
    #       registryUrl: docker.io
    #       resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
    #       containerAppName: ${{ vars.AZURE_CONTAINER_APP_NAME }}
    #       location: ${{ vars.AZURE_LOCATION }}

    # - name: Find pull request
    #   id: find-pr
    #   uses: juliangruber/find-pull-request-action@v1
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Comment on PR with the app URL
    #   if: steps.find-pr.outputs.number != ''
    #   uses: actions/github-script@v6
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       await github.rest.issues.createComment({
    #         issue_number: ${{ steps.find-pr.outputs.number }},
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: `ðŸš€ Deployed to: ${{ steps.build-deploy.outputs.appUrl }}`
    #       });
